{"version":3,"file":"admob.js","sources":["../node_modules/lodash-es/isUndefined.js","../src/js/utils.js","../src/js/banner.js","../src/js/interstitial.js","../src/js/reward-video.js","../src/js/admob.js"],"sourcesContent":["/**\n * Checks if `value` is `undefined`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n * @example\n *\n * _.isUndefined(void 0);\n * // => true\n *\n * _.isUndefined(null);\n * // => false\n */\nfunction isUndefined(value) {\n  return value === undefined;\n}\n\nexport default isUndefined;\n","import corodvaExec from 'cordova/exec'\nimport isUndefined from 'lodash/isUndefined'\n\n/**\n * @ignore\n */\nexport function exec(method, args) {\n  return new Promise((resolve, reject) => {\n    corodvaExec(resolve, reject, 'AdMob', method, args)\n  })\n}\n\n/**\n * @ignore\n */\nexport function isFunction(x) {\n  return typeof x === 'function'\n}\n\nfunction isString(x) {\n  return typeof x === 'string'\n}\n\n/**\n * @ignore\n */\nexport function wrapCallbacks(p, successCallback, failureCallback) {\n  if (isFunction(successCallback)) {\n    p = p.then(successCallback)\n  }\n  if (isFunction(failureCallback)) {\n    p = p.catch(failureCallback)\n  }\n  return p\n}\n\nfunction boolean2string(x) {\n  if (x === null) {\n    return ''\n  }\n  if (x === true) {\n    return 'yes'\n  }\n  if (x === false) {\n    return 'no'\n  }\n  return x\n}\n\n/**\n * @ignore\n */\nexport function translateOptions(options) {\n  /* eslint-disable no-console */\n  const opts = {}\n  if (!isUndefined(options.forChild)) {\n    opts.forChild = boolean2string(options.forChild)\n    if (isString(options.forChild)) {\n      console.warn('`forChild` will not accept string in future, pass boolean instead')\n    }\n  }\n  if (!isUndefined(options.forFamily)) {\n    opts.forFamily = boolean2string(options.forFamily)\n    if (isString(options.forFamily)) {\n      console.warn('`forFamily` will not accept string in future, pass boolean instead')\n    }\n  }\n  return {\n    ...options,\n    ...opts,\n  }\n}\n\n/**\n * @ignore\n */\nexport function buildEvents(adType, eventKeys) {\n  return eventKeys.reduce((r, eventKey) => {\n    r[eventKey] = `admob.${adType}.events.${eventKey}`\n    return r\n  }, {})\n}\n","import {buildEvents, exec, translateOptions} from './utils'\n\n/**\n * Banner config object.\n * @typedef {Object} BannerConfig\n * @property {string} [id=TESTING_AD_ID] - Ad Unit ID\n * @property {boolean} [isTesting=false] - receiving test ad\n * @property {boolean} [autoShow=false] - auto show ad when loaded\n * @property {boolean} [bannerAtTop=false] - set to true, to put banner at top\n * @property {boolean} [overlap=true] - set to true, to allow banner overlap webview\n * @property {boolean} [offsetTopBar=false] - set to true to avoid ios7 status bar overlap\n * @property {string} [size=SMART_BANNER] - {@link BANNER_SIZE}\n */\n\nconst events = buildEvents('banner', [\n  'LOAD',\n  'LOAD_FAIL',\n  'OPEN',\n  'CLOSE',\n  'EXIT_APP',\n])\n\n/**\n * @typedef {Object} BANNER_SIZE\n * @property {string} BANNER - BANNER\n * @property {string} IAB_BANNER - IAB_BANNER\n * @property {string} IAB_LEADERBOARD - IAB_LEADERBOARD\n * @property {string} IAB_MRECT - IAB_MRECT\n * @property {string} LARGE_BANNER - LARGE_BANNER\n * @property {string} SMART_BANNER - SMART_BANNER\n * @property {string} FLUID - FLUID\n */\n/**\n * @constant\n * @type {Object}\n */\nconst sizes = {\n  BANNER: 'BANNER',\n  IAB_BANNER: 'IAB_BANNER',\n  IAB_LEADERBOARD: 'IAB_LEADERBOARD',\n  IAB_MRECT: 'IAB_MRECT',\n  LARGE_BANNER: 'LARGE_BANNER',\n  SMART_BANNER: 'SMART_BANNER',\n  FLUID: 'FLUID',\n  // android-only\n  FULL_BANNER: 'FULL_BANNER',\n  LEADERBOARD: 'LEADERBOARD',\n  MEDIUM_RECTANGLE: 'MEDIUM_RECTANGLE',\n  SEARCH: 'SEARCH',\n  WIDE_SKYSCRAPER: 'WIDE_SKYSCRAPER',\n}\n\n/**\n * @protected\n * @desc\n * See usage in {@link banner}.\n */\nclass Banner {\n  static events = events\n\n  /**\n   * Banner sizes\n   * @type {BANNER_SIZE}\n   */\n  static sizes = sizes\n\n  /**\n   * @protected\n   * @param {BannerConfig} opts - initial config.\n   */\n  constructor(opts) {\n    this.config({\n      size: sizes.SMART_BANNER,\n      ...opts,\n    })\n  }\n\n  /**\n   * Update config.\n   * @param {BannerConfig} opts - new config.\n   * @return {BannerConfig} updated config.\n   */\n  config(opts) {\n    this._config = {\n      ...this._config,\n      ...opts,\n    }\n    return this._config\n  }\n\n  /**\n   * Create banner.\n   * @return {Promise}\n   */\n  prepare() {\n    const options = {\n      publisherId: this._config.id,\n      ...this._config,\n    }\n    delete options.id\n    return exec('createBannerView', [translateOptions(options)])\n  }\n\n  /**\n   * Show the banner.\n   * @return {Promise}\n   */\n  show() {\n    return exec('showAd', [true])\n  }\n\n  /**\n   * Hide the banner.\n   * @return {Promise}\n   */\n  hide() {\n    return exec('showAd', [false])\n  }\n\n  /**\n   * Remove the banner.\n   * @return {Promise}\n   */\n  remove() {\n    return exec('destroyBannerView', [])\n  }\n}\n\nexport {Banner}\n","import {buildEvents, exec, translateOptions} from './utils'\n\n/**\n * Interstitial config object.\n * @typedef {Object} InterstitialConfig\n * @property {string} [id=TESTING_AD_ID] - Ad Unit ID\n * @property {boolean} [isTesting=false] - receiving test ad\n * @property {boolean} [autoShow=false] - auto show ad when loaded\n */\n\nconst events = buildEvents('interstitial', [\n  'LOAD',\n  'LOAD_FAIL',\n  'OPEN',\n  'CLOSE',\n  'EXIT_APP',\n])\n\n/**\n * @protected\n * @desc\n * See usage in {@link interstitial}.\n */\nclass Interstitial {\n  static events = events\n\n  /**\n   * @protected\n   * @param {InterstitialConfig} opts - initial config.\n   */\n  constructor(opts) {\n    this.config({\n      ...opts,\n    })\n  }\n\n  /**\n   * Update config.\n   * @param {InterstitialConfig} opts - new config.\n   * @return {InterstitialConfig} updated config.\n   */\n  config(opts) {\n    this._config = {\n      ...this._config,\n      ...opts,\n    }\n    return this._config\n  }\n\n  /**\n   * @return {Promise}\n   */\n  prepare() {\n    const options = {\n      interstitialAdId: this._config.id,\n      ...this._config,\n    }\n    delete options.id\n    return exec('prepareInterstitial', [translateOptions(options)])\n  }\n\n  /**\n   * @return {Promise}\n   */\n  show() {\n    return exec('showInterstitialAd', [true])\n  }\n\n  /**\n   * @return {Promise}\n   */\n  isReady() {\n    return exec('isInterstitialReady', [])\n  }\n}\n\nexport {Interstitial}\n","import {buildEvents, exec, translateOptions} from './utils'\n\n/**\n * Reward Video config object.\n * @typedef {Object} RewardVideoConfig\n * @property {string} [id=TESTING_AD_ID] - Ad Unit ID\n * @property {boolean} [isTesting=false] - receiving test ad\n * @property {boolean} [autoShow=false] - auto show ad when loaded\n */\n\nconst events = buildEvents('rewardvideo', [\n  'LOAD',\n  'LOAD_FAIL',\n  'OPEN',\n  'CLOSE',\n  'EXIT_APP',\n  'START',\n  'REWARD',\n])\n\n/**\n * See usage in {@link rewardvideo}.\n * @protected\n */\nclass RewardVideo {\n  static events = events\n\n  /**\n   * @protected\n   * @param {RewardVideoConfig} opts - initial config.\n   */\n  constructor(opts) {\n    this.config({\n      ...opts,\n    })\n  }\n\n  /**\n   * Update config.\n   * @param {RewardVideoConfig} opts - new config.\n   * @return {RewardVideoConfig} updated config.\n   */\n  config(opts) {\n    this._config = {\n      ...this._config,\n      ...opts,\n    }\n    return this._config\n  }\n\n  /**\n   * @return {Promise}\n   */\n  prepare() {\n    const options = {\n      rewardVideoId: this._config.id,\n      ...this._config,\n    }\n    delete options.id\n    return exec('createRewardVideo', [translateOptions(options)])\n  }\n\n  /**\n   * @return {Promise}\n   */\n  show() {\n    return exec('showRewardVideo', [true])\n  }\n\n  /**\n   * @return {Promise}\n   */\n  isReady() {\n    return exec('isRewardVideoReady', [])\n  }\n}\n\nexport {RewardVideo}\n","/* eslint-disable no-console */\nimport exec from 'cordova/exec'\n\nimport {wrapCallbacks, translateOptions} from './utils'\n\nimport {Banner} from './banner'\nimport {Interstitial} from './interstitial'\nimport {RewardVideo} from './reward-video'\n\n/**\n * @type {Banner}\n * @since 0.6\n * @emits {admob.banner.events.LOAD}\n * @emits {admob.banner.events.LOAD_FAIL}\n * @emits {admob.banner.events.OPEN}\n * @emits {admob.banner.events.CLOSE}\n * @emits {admob.banner.events.EXIT_APP}\n * @example\n * admob.banner.config({\n *  id: 'ca-app-pub-xxx/xxx',\n * })\n *\n * // Create banner\n * admob.banner.prepare()\n *\n * // Show the banner\n * admob.banner.show()\n *\n * // Hide the banner\n * admob.banner.hide()\n *\n * // Remove the banner\n * admob.banner.remove()\n */\nexport const banner = new Banner()\n\n/**\n * @type {Interstitial}\n * @since 0.6\n * @emits {admob.interstitial.events.LOAD}\n * @emits {admob.interstitial.events.LOAD_FAIL}\n * @emits {admob.interstitial.events.OPEN}\n * @emits {admob.interstitial.events.CLOSE}\n * @emits {admob.interstitial.events.EXIT_APP}\n * @example\n * admob.interstitial.config({\n *  id: 'ca-app-pub-xxx/xxx',\n * })\n *\n * admob.interstitial.prepare()\n *\n * admob.interstitial.show()\n */\nexport const interstitial = new Interstitial()\n\n/**\n * @external {cordova-admob-mediation} https://github.com/rehy/cordova-admob-mediation\n */\n/**\n * Reward video requires mediation SDK to be installed,\n * see {@link cordova-admob-mediation} for list of supported networks.\n * @type {RewardVideo}\n * @since 0.6\n * @emits {admob.rewardvideo.events.LOAD}\n * @emits {admob.rewardvideo.events.LOAD_FAIL}\n * @emits {admob.rewardvideo.events.OPEN}\n * @emits {admob.rewardvideo.events.CLOSE}\n * @emits {admob.rewardvideo.events.EXIT_APP}\n * @emits {admob.rewardvideo.events.START}\n * @emits {admob.rewardvideo.events.REWARD}\n * @example\n * admob.rewardvideo.config({\n *  id: 'ca-app-pub-xxx/xxx',\n * })\n *\n * admob.rewardvideo.prepare()\n *\n * admob.rewardvideo.show()\n */\nexport const rewardvideo = new RewardVideo()\n\n// Old APIs\n\n/**\n *\n * @deprecated since version 0.6\n * @param {Object} options\n * @param {string} options.publisherId\n * @param {string} options.interstitialAdId\n *\n * @param {boolean} [options.bannerAtTop=false]    Set to true, to put banner at top\n * @param {boolean} [options.overlap=true]   Set to true, to allow banner overlap webview\n * @param {boolean} [options.offsetTopBar=false]    Set to true to avoid ios7 status bar overlap\n * @param {boolean} [options.isTesting=false]    Receiving test ad\n * @param {boolean} [options.autoShow=false]    Auto show interstitial ad when loaded\n *\n * @param {boolean|null} [options.forChild=null]\n * Default is not calling `tagForChildDirectedTreatment`.\n * Set to \"true\" for `tagForChildDirectedTreatment(true)`.\n * Set to \"false\" for `tagForChildDirectedTreatment(false)`.\n *\n * @param {boolean|null} [options.forFamily=null]\n * Android-only.\n * Default is not calling `setIsDesignedForFamilies`.\n * Set to \"true\" for `setIsDesignedForFamilies(true)`.\n * Set to \"false\" for `setIsDesignedForFamilies(false)`.\n *\n * @param {function()} [successCallback]\n * @param {function()} [failureCallback]\n */\nexport function setOptions(options, successCallback, failureCallback) {\n  if (typeof options === 'object') {\n    Object.keys(options).forEach((k) => {\n      switch (k) {\n        case 'publisherId':\n          banner._config.id = options[k]\n          break\n        case 'bannerAtTop':\n        case 'overlap':\n        case 'offsetTopBar':\n          banner._config[k] = options[k]\n          break\n        case 'interstitialAdId':\n          interstitial._config.id = options[k]\n          break\n        case 'rewardVideoId':\n          rewardvideo._config.id = options[k]\n          break\n        case 'isTesting':\n        case 'autoShow':\n          banner._config[k] = options[k]\n          interstitial._config[k] = options[k]\n          rewardvideo._config[k] = options[k]\n          break\n        default:\n      }\n    })\n    exec(successCallback, failureCallback, 'AdMob', 'setOptions', [translateOptions(options)])\n  } else if (typeof failureCallback === 'function') {\n    failureCallback('options should be specified.')\n  }\n}\n\n/**\n * Ad sizes.\n * @constant\n * @type {BANNER_SIZE}\n * @deprecated since version 0.6\n */\nexport const AD_SIZE = Banner.sizes\n\n/**\n * @deprecated since version 0.6\n */\nexport function createBannerView(options = {}, successCallback, failureCallback) {\n  console.warn('Use admob.banner.prepare() instead.')\n  exec(successCallback, failureCallback, 'AdMob', 'createBannerView', [translateOptions(options)])\n}\n\n/**\n * @deprecated since version 0.6\n */\nexport function destroyBannerView(options = {}, successCallback, failureCallback) {\n  console.warn('Use admob.banner.remove() instead.')\n  exec(successCallback, failureCallback, 'AdMob', 'destroyBannerView', [])\n}\n\n/**\n * @deprecated since version 0.6\n */\nexport function showAd(show = true, successCallback, failureCallback) {\n  console.warn('Use admob.banner.show() and admob.banner.hide() instead.')\n  exec(successCallback, failureCallback, 'AdMob', 'showAd', [show])\n}\n\n/**\n * @deprecated since version 0.6\n */\nexport function createInterstitialView(options, successCallback, failureCallback) {\n  console.warn('Use admob.interstitial.prepare() instead, it will do both createInterstitialView() and requestInterstitialAd().')\n  exec(successCallback, failureCallback, 'AdMob', 'createInterstitialView', [translateOptions(options)])\n}\n\n/**\n * @deprecated since version 0.6\n */\nexport function requestInterstitialAd(options = {}, successCallback, failureCallback) {\n  console.warn('Use admob.interstitial.prepare() instead, it will do both createInterstitialView() and requestInterstitialAd().')\n  exec(successCallback, failureCallback, 'AdMob', 'requestInterstitialAd', [translateOptions(options)])\n}\n\n/**\n * @deprecated since version 0.6\n */\nexport function prepareInterstitial(options = {}, successCallback, failureCallback) {\n  console.warn('Use admob.interstitial.prepare() instead.')\n  exec(successCallback, failureCallback, 'AdMob', 'prepareInterstitial', [translateOptions(options)])\n}\n\n/**\n * @deprecated since version 0.6\n */\nexport function showInterstitial(successCallback, failureCallback) {\n  console.warn('Use admob.interstitial.show() instead.')\n  wrapCallbacks(interstitial.show(), successCallback, failureCallback)\n}\n\n/**\n * @deprecated since version 0.6\n */\nexport function showInterstitialAd(show = true, successCallback, failureCallback) {\n  console.warn('Use admob.interstitial.show() instead.')\n  exec(successCallback, failureCallback, 'AdMob', 'showInterstitialAd', [show])\n}\n"],"names":["exec","method","args","Promise","resolve","reject","isFunction","x","isString","wrapCallbacks","p","successCallback","failureCallback","then","boolean2string","translateOptions","options","opts","isUndefined","forChild","warn","forFamily","buildEvents","adType","eventKeys","reduce","r","eventKey","events","sizes","Banner","config","SMART_BANNER","_config","id","Interstitial","RewardVideo","banner","interstitial","rewardvideo","setOptions","keys","forEach","k","AD_SIZE","createBannerView","destroyBannerView","showAd","show","createInterstitialView","requestInterstitialAd","prepareInterstitial","showInterstitial","showInterstitialAd"],"mappings":"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"}